

v0.9.14
-------

Added a link to the tutorials at blog.soulserv.net/tag/terminal.


v0.9.13
-------

Upgraded dependencies.


v0.9.11 - v0.9.12
-----------------

.noFormat() is now documented (thus under the SemVer contract).


v0.9.10
-------

Upgraded to string-kit@0.1.5.


v0.9.9
------

Just a small addition to the documentation: require() are added in most example (user's feedback).


v0.9.8
------

Upgraded dependencies.


v0.9.2 - v0.9.7
---------------

Package description & README.md that better fit the new npmjs.org site.


v0.9.1
-------

Removing tools/sprite-editor.js: the editor has now its own package: 'leeted'.
The demo located in demo/spaceship.js works again (sprites have been converted to file format V2).
Some performance optimization have greatly improved CPU usage.


v0.9.0
-------

File format has changed for ScreenBuffer.loadSync() and screenBuffer.saveSync().
This is now the format version 2.
File of format version 1 can still be loaded/saved using ScreenBuffer.loadSyncV1() and screenBuffer.saveSyncV1().
This file format is more flexible, so improvement to the lib can be achieved without changing the file format each time.


v0.8.0
-------

The Rect class has moved from termkit.ScreenBuffer.Rect to termkit.Rect
The 'key' event callback's argument #2 (data) now contains a 'isCharacter' property, true for printable, false for control
screenBuffer.clear() -> screenBuffer.fill()


v0.7.1
-------

Sprite editor now support the mouse.


v0.7.0
-------

ScreenBuffer now use Big Endian: there is no performance drop on Little Endian system and the code is less error prone.


v0.6.14
-------

ScreenBuffer .put() now support the 'wrap' option, bypassing the default 'wrap' value of the current screenBuffer.


v0.6.13
-------

ScreenBuffer .put() now support writing in any of the 4 directions.
The sprite editor can set the writing direction.


v0.6.12
-------

ScreenBuffer blending: style transparency bugfix.
Improvement of the sprite editor (new features: fill colors/style, put only attributes).
Improvement of the demo graphics.


v0.6.11
-------

Improvement of the sprite editor (editor's background character is not customizable).


v0.6.10
-------

Now it is possible to resize a ScreenBuffer.
Improvement of the sprite editor (sprite resizing, editor's background colors are customizable).


v0.6.9
------

Many type of transparencies: foreground color, background color, style & character.
New: a sprite editor, located in demo/sprite-editor.js.


v0.6.8
------

Refactoring, so the tile-variant & the wrap-variant of blitter are now available for the terminal blitter.


v0.6.7
------

The 'tile' blitter is now faster and cleaner.
Some bugfix on buffer creation (size should be integer, not float).


v0.6.6
------

The buffer to buffer blitter now support the 'tile' option.


v0.6.5
------

The buffer to buffer blitter now support the 'wrap' option.


v0.6.2 - v0.6.4
---------------

Improved terminal's blitter.


v0.6.1
------

ScreenBuffer refactoring.


v0.6.0
------

Major change in the module.exports tree: the backward compatibility is broken, but it can be easily fixed.
Just replace:

var term = require( 'terminal-kit' ) ;

... by:

var term = require( 'terminal-kit' ).terminal ;

Now, that is when the .terminal property is accessed for the first time that a terminal is guessed.

This make the code cleaner and remove any trouble when circular require() occurs: the module does not perform
anything until an userland code request so.


v0.5.17
-------

Spaceship demo: added a spaceship moving with the arrow keys.


v0.5.16
-------

Spaceship demo: scrolling space.


v0.5.15
-------

New: term.ScreenBuffer object. Still a work in progress. Documentation will be available when stabilized.


v0.5.14
-------

Great news: now GPM is supported, so if the daemon is running, the mouse is supported even in the Linux Console!


v0.5.13
-------

Bugfix when COLORTERM is not defined, it causes a crash.


v0.5.12
-------

Documentation on 'MOUSE_BUTTON_RELEASED'.


v0.5.10 - v0.5.11
-----------------

SSH tests.


v0.5.9
------

SSH detection, this does not improve things except that .getDetectedTerminal() use simple guessing
rather than the expensive .getParentTerminalInfo().


v0.5.8
------

Eterm support.


v0.5.7
------

Better support for rxvt/urxvt.
Better terminal guessing.


v0.5.6
------

Bugfix: .grabInput() leak when called multiple times.
Better support for rxvt/urxvt.


v0.5.5
------

Better support for xfce4-terminal.


v0.5.4
------

New terminals supported: Terminator, rxvt, urxvt, xfce4-terminal.


v0.5.3
------

Documentation: DEPRECATE .requestScreenSize()


v0.5.2
------

Refactoring
.setColor() now accept a "names" argument


v0.5.1
------

.getColorRegister() -> .getColor()
Documentation on v0.4.4 features, and about the 24 bits feature.


v0.4.5
------

Bugfix: now Konsole can use 24 bits colors.


v0.4.4
------

.setColor() set a color register to RGB
.getPalette() request from the terminal (if supported) the current 16 colors palette in use.
.setPalette() set the 16 colors palette, it is possible to specify a color scheme name


v0.4.3
------

Now the lib is aware of the default VGA palette for the Linux Console.


v0.4.2
------

Bugfix: .getDetectedTerminal() do not issue error anymore if no terminal was detected, it simply returns
the default terminal.
New: the HSL cylender coordinate is now used to pick up the closest color register match for RGB.
Status of the lib is now BETA.


v0.4.1
------

New high-level function: .getColorRegister()


v0.4.0
------

.color256rgb() -> .colorRgb()
.bgColor256rgb() -> .bgColororRgb()
.color256gray() -> .colorGrayscale()
.bgColor256gray() -> .bgColorGrayscale()

Fallback for 256 colors, if not supported by the terminal, it picks the closest color in the 16 colors.
.setCursorColor() & .setCursorColorRgb() now work fine with the Linux Console.


v0.3.8
------

.setCursorColor() & .setCursorColorRgb() to change the color of the cursor.


v0.3.4 - v0.3.7
---------------

Dependency hell.


v0.3.3
------

Upgraded dependencies (async-kit, tree-kit, string-kit).

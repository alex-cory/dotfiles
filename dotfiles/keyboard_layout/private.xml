<?xml version="1.0"?>
<root>
  <item>
    <name>Power Keys (also to help w/ carpal tunnel)</name>
    <appendix>KEYBOARD LAYOUT THAT REVERSES COMMAND/CTRL/OPTION/SHIFT/TAB</appendix>
    <item>
      <name>Single Quote to Control_L</name>
      <appendix>(+ When you hold Single Quote, send Control_L. If you tap, send Single Quote)</appendix>
      <identifier>remap.singleQuoteOnHold2Control_L</identifier>
      <autogen>
        __KeyOverlaidModifier__
        KeyCode::QUOTE,
        KeyCode::CONTROL_L, Option::NOREPEAT,
        KeyCode::QUOTE
      </autogen>
    </item>
    <item>
      <name>On Hold: F1 to Control_L</name>
      <appendix></appendix>
      <identifier>remap.one2commandLcontrolLonHold</identifier>
      <autogen>
        __KeyOverlaidModifier__
        KeyCode::F1,
        KeyCode::CONTROL_L, Option::NOREPEAT,
        KeyCode::F1
      </autogen>
    </item>
    <item>
      <name>On Hold: F2 to Option Right on Hold</name>
      <appendix></appendix>
      <identifier>remap.two2tabOnHold</identifier>
      <autogen>
        __KeyOverlaidModifier__
        KeyCode::F2,
        KeyCode::OPTION_L, Option::NOREPEAT,
        KeyCode::F2
      </autogen>
    </item>
    <item>
      <name>On Hold: F3 to Command Left on Hold</name>
      <appendix>(+ When you hold `Comma` send Command_R. If you tap, send `Comma`</appendix>
      <identifier>remap.three2commandRonHold</identifier>
      <autogen>
        __KeyOverlaidModifier__
        KeyCode::F3, KeyCode::COMMAND_L, Option::NOREPEAT,
        KeyCode::F3
      </autogen>
    </item>
    <item>
      <name>On Hold: F10 to Option Right on Hold</name>
      <appendix></appendix>
      <identifier>remap.period2tabOnHold</identifier>
      <autogen>
        __KeyOverlaidModifier__
        KeyCode::F10, KeyCode::OPTION_R, Option::NOREPEAT,
        KeyCode::F10
      </autogen>
    </item>
    <item>
      <name>On Hold: F9 to Command Right on Hold</name>
      <appendix>(+ When you hold `Comma` send Command_R. If you tap, send `Comma`</appendix>
      <identifier>remap.comma2commandRonHold</identifier>
      <autogen>
        __KeyOverlaidModifier__
        KeyCode::F9,
        KeyCode::COMMAND_R, Option::NOREPEAT,
        KeyCode::F9
      </autogen>
    </item>
    <item>
      <name>On Hold: Left Bracket to Command + Option</name>
      <appendix>(+ When you hold `left bracket` send Command_R. If you tap, send `Left Bracket`</appendix>
      <identifier>remap.leftBracket2commandRonHold</identifier>
      <autogen>
        __KeyOverlaidModifier__
        KeyCode::BRACKET_LEFT,
        KeyCode::COMMAND_R, ModifierFlag::OPTION_R, Option::NOREPEAT,
        KeyCode::BRACKET_LEFT
      </autogen>
    </item>
    <item>
      <name>On Hold: Tab to Shift + Command_L</name>
      <appendix></appendix>
      <identifier>remap.tab2shiftCommand</identifier>
      <autogen>
        __KeyOverlaidModifier__
        KeyCode::TAB,
        KeyCode::COMMAND_L, ModifierFlag::SHIFT_L, Option::NOREPEAT,
        KeyCode::TAB
      </autogen>
    </item>

    <!-- Hold Space as hyper key-->
    <!-- DEFINITION OF HYPER -->
    <item>
      <name>On Hold: Space to Shift + Command_r + Option_r + Control_r</name>
      <appendix></appendix>
      <identifier>remap.SpaceToHyper</identifier>
      <autogen>
        __KeyOverlaidModifier__
        KeyCode::SPACE,
        KeyCode::COMMAND_R, ModifierFlag::SHIFT_R, ModifierFlag::OPTION_R, ModifierFlag::CONTROL_R, Option::NOREPEAT,
        KeyCode::SPACE
      </autogen>
    </item>

    <!-- Flip through current applications windows -->
    <item>
      <name>Space + K:  Flip Through Active Windows</name>
      <identifier>private.flipWindows</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::K, ModifierFlag::COMMAND_R, ModifierFlag::SHIFT_R, ModifierFlag::OPTION_R, ModifierFlag::CONTROL_R,
        KeyCode::BACKQUOTE, ModifierFlag::COMMAND_R
      </autogen>
    </item>

    <!-- Switch Tabs Right or Left -->
    <item>
      <name>On Hold: Space/hyper + l OR j to Command + Shift + Right OR Left Bracket</name>
      <appendix></appendix>
      <identifier>remap.spaceAndBracketR2cmdShiftBracketR</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::L, ModifierFlag::COMMAND_R, ModifierFlag::SHIFT_R, ModifierFlag::OPTION_R, ModifierFlag::CONTROL_R,
        KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_R, ModifierFlag::SHIFT_R
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::J, ModifierFlag::COMMAND_R, ModifierFlag::SHIFT_R, ModifierFlag::OPTION_R, ModifierFlag::CONTROL_R,
        KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_R, ModifierFlag::SHIFT_R
      </autogen>
    </item>

    <!-- Activate and Refresh Current Chrome Tab -->
    <vkopenurldef>
      <name>KeyCode::VK_OPEN_URL_SHELL_focus_and_refresh_chrome</name>
      <url type="shell">
        <![CDATA[    bash ~/GoogleDrive/_Server_/Developer/git_repositories/fasthacks/dotfiles/keyboard_layout/reloadThatShit.sh && osascript -e 'tell application "Google Chrome" to Activate'   ]]>
      </url>
    </vkopenurldef>
    <item>
      <name>⌘ + ⌥ + shift + ctrl + R:  Activate and Refresh Current Chrome Tab</name>
      <identifier>private.focusChromeAndRefresh</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::R, ModifierFlag::COMMAND_R, ModifierFlag::SHIFT_R, ModifierFlag::OPTION_R, ModifierFlag::CONTROL_R,
        KeyCode::VK_OPEN_URL_SHELL_focus_and_refresh_chrome
      </autogen>
    </item>

    <!-- Chrome -->
    <vkopenurldef>
      <name>KeyCode::VK_OPEN_URL_APP_Google_Chrome</name>
      <url type="file">/Applications/Google Chrome.app</url>
    </vkopenurldef>
    <item><!-- Open Chrome -->
      <name>On Hold: Space + D to Launch/Bring Google Chrome to Forefront</name>
      <identifier>private.hotKey_Google_Chrome</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::D, ModifierFlag::COMMAND_R, ModifierFlag::SHIFT_R, ModifierFlag::OPTION_R, ModifierFlag::CONTROL_R,
        KeyCode::VK_OPEN_URL_APP_Google_Chrome
      </autogen>
    </item>

    <!-- iTerm -->
    <item>
      <name>Toggle iTerm</name>
      <identifier>private.toggleiTerm</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::S, ModifierFlag::COMMAND_R, ModifierFlag::SHIFT_R, ModifierFlag::OPTION_R, ModifierFlag::CONTROL_R,
        KeyCode::SPACE, ModifierFlag::OPTION_R
      </autogen>
    </item>

    <!-- MacVim -->
    <!-- <vkopenurldef> -->
    <!--   <name>KeyCode::VK_OPEN_URL_APP_MacVim</name> -->
    <!--   <appendix>/usr/local/Cellar/macvim/7.4&#45;76/MacVim.app</appendix> -->
    <!--   <url type="file">/usr/local/Cellar/macvim/7.4&#45;77/MacVim.app</url> -->
    <!-- </vkopenurldef> -->
    <!-- <item><!&#45;&#45; Open MacVim &#45;&#45;> -->
    <!--   <name>On hold: Space + f to launch/bring MacVim to forefront</name> -->
    <!--   <appendix></appendix> -->
    <!--   <identifier>remap.hotkey_MacVim</identifier> -->
    <!--   <autogen> -->
    <!--     __KeyToKey__ -->
    <!--     KeyCode::F, ModifierFlag::COMMAND_R, ModifierFlag::SHIFT_R, ModifierFlag::OPTION_R, ModifierFlag::CONTROL_R, -->
    <!--     KeyCode::VK_OPEN_URL_APP_MacVim -->
    <!--   </autogen> -->
    <!-- </item> -->

    <!-- Sublime Text -->
    <vkopenurldef>
      <name>KeyCode::VK_OPEN_URL_APP_ST</name>
      <url type="file">/Applications/Sublime Text.app</url>
    </vkopenurldef>
    <item><!-- Open Sublime Text -->
      <name>On hold: Space + f to launch/bring Sublime Text to forefront</name>
      <appendix></appendix>
      <identifier>remap.hotkey_ST</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::F, ModifierFlag::COMMAND_R, ModifierFlag::SHIFT_R, ModifierFlag::OPTION_R, ModifierFlag::CONTROL_R,
        KeyCode::VK_OPEN_URL_APP_ST
      </autogen>
    </item>

    <!-- Slack -->
    <vkopenurldef>
      <name>KeyCode::VK_OPEN_URL_APP_Slack</name>
      <url type="file">/Applications/Slack.app</url>
    </vkopenurldef>
    <item><!-- Open Slack -->
      <name>On hold: Space + a to launch/bring Slack to forefront</name>
      <appendix></appendix>
      <identifier>remap.hotkey_Slack</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::A, ModifierFlag::COMMAND_R, ModifierFlag::SHIFT_R, ModifierFlag::OPTION_R, ModifierFlag::CONTROL_R,
        KeyCode::VK_OPEN_URL_APP_Slack
      </autogen>
    </item>

    <!-- Spotify -->
    <vkopenurldef>
      <name>KeyCode::VK_OPEN_URL_APP_Spotify</name>
      <url type="file">/Applications/Spotify.app</url>
    </vkopenurldef>
    <item><!-- Open Spotify -->
      <name>On Hold: Space + M to Launch/Bring Spotify to Forefront</name>
      <identifier>private.hotKey_Spotify</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::M, ModifierFlag::COMMAND_R, ModifierFlag::SHIFT_R, ModifierFlag::OPTION_R, ModifierFlag::CONTROL_R,
        KeyCode::VK_OPEN_URL_APP_Spotify
      </autogen>
    </item>
    <!--
        | TODO:
        | - hold `d` enables vim navigation with `hjkl`
        |      if you hold `f` with `d` it is like `option + hjkl`
        |      if you hold `f` with `d` it is like `option + hjkl`
        | - hold 4        = cmd_l + opition_l + ctrl_l
        | - hold 8        = cmd_r + opition_r + ctrl_r
        | - hold sf + k to full screen
        | - hold sf + h to left half screen
        | - hold sf + l to right half screen
        | - Launch Karabiner = cmd + ctrl + option + k
        | - hold 1 + k to full screen at far left display
        | - hold 2 + k to full screen at 2nd from left display
        | - hold 3 + k to full screen at 3rd from left display
        | - Space Tab    = Command Tab <= maybe
        | - Space Tilda  = Command Tilda <= maybe
        | - back to number row for commands keys.  if shift is held, the on hold functionality is lost for all numbers row
        |
        |
        |
        |
        |
    -->
  </item>

  <!-- HYPER KEY DEFINITION -->
  <!-- <item> -->
  <!--   <modifierdef>MY_HYPER</modifierdef> -->
  <!--   <modifierdef>MY_SUPER</modifierdef> -->
  <!--  -->
  <!--   <item> -->
  <!--     <name>My hyper key on hold</name> -->
  <!--     <appendix>* Change the space key to my hyper key on hold.</appendix> -->
  <!--     <!&#45;&#45; <appendix>* Change the right option key to my super key.</appendix> &#45;&#45;> -->
  <!--     <appendix></appendix> -->
  <!--     <!&#45;&#45; <appendix>* Change hyper+a,s to 1,2.</appendix> &#45;&#45;> -->
  <!--     <!&#45;&#45; <appendix>* Change super+a,s to brightness controls.</appendix> &#45;&#45;> -->
  <!--     <identifier>private.hyperKey</identifier> -->
  <!--  -->
  <!--     <!&#45;&#45; Change the right shift key to my hyper key. &#45;&#45;> -->
  <!--     <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::VK_MODIFIER_MY_HYPER</autogen> -->
  <!--     <!&#45;&#45; Change the right option key to my super key. &#45;&#45;> -->
  <!--     <!&#45;&#45; <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::VK_MODIFIER_MY_SUPER</autogen> &#45;&#45;> -->
  <!--  -->
  <!--     <!&#45;&#45; hyper key settings &#45;&#45;> -->
  <!--     <autogen> -->
  <!--       __KeyToKey__ -->
  <!--       KeyCode::A, ModifierFlag::MY_HYPER, -->
  <!--       KeyCode::KEY_1, -->
  <!--     </autogen> -->
  <!--     <autogen> -->
  <!--       __KeyToKey__ -->
  <!--       KeyCode::S, ModifierFlag::MY_HYPER, -->
  <!--       KeyCode::KEY_2, -->
  <!--     </autogen> -->
  <!--  -->
  <!--     <!&#45;&#45; super key settings &#45;&#45;> -->
  <!--     <autogen> -->
  <!--       __KeyToKey__ -->
  <!--       KeyCode::A, ModifierFlag::MY_SUPER, -->
  <!--       ConsumerKeyCode::BRIGHTNESS_DOWN, -->
  <!--     </autogen> -->
  <!--     <autogen> -->
  <!--       __KeyToKey__ -->
  <!--       KeyCode::S, ModifierFlag::MY_SUPER, -->
  <!--       ConsumerKeyCode::BRIGHTNESS_UP, -->
  <!--     </autogen> -->
  <!--  -->
  <!--   </item> -->
  <!-- </item> -->
</root>

